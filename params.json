{"name":"Kobold-core","tagline":"Core library for shared objects of the Kobold testing framework","body":"Kobold-Core\r\n===========\r\n\r\nCore library for shared objects of the Kobold testing framework.\r\n\r\n\r\n[![Build Status](https://secure.travis-ci.org/yahoo/kobold-core.png)](http://travis-ci.org/yahoo/kobold-core)\r\n[![npm version](https://badge.fury.io/js/kobold-core.svg)](http://badge.fury.io/js/kobold-core)\r\n\r\n[![NPM](https://nodei.co/npm/kobold-core.png?downloads=true)](https://nodei.co/npm/kobold-core/)\r\n\r\n\r\n[API-Documentation](http://yahoo.github.io/kobold-core/docs/)\r\n\r\n[Coverage Report](http://yahoo.github.io/kobold-core/coverage/lcov-report/)\r\n\r\n\r\n**Table of Contents**\r\n* [Installation](#installation)\r\n* [Usage](#usage)\r\n    * [Storage Adapter](#storage-adapter)\r\n        * [File Storage Adapter](#file-storage-adapter)\r\n        * [Key-Value Storage Adapter](#key-value-storage-adapter)\r\n    * [Connection Adapter](#connection-adapter)\r\n        * [Riak Connection Adapter](#riak-connection-adapter)\r\n* [API-Documentation](#api-documentation)\r\n* [Tests](#tests)\r\n* [Third-party libraries](#third-party-libraries)\r\n* [License](#license)\r\n\r\n\r\n##Installation\r\n\r\nInstall this module with the following command:\r\n```shell\r\nnpm install kobold-core\r\n```\r\n\r\nAdd the module to your ```package.json``` dependencies:\r\n```shell\r\nnpm install --save kobold-core\r\n```\r\nAdd the module to your ```package.json``` dev-dependencies:\r\n```shell\r\nnpm install --save-dev kobold-core\r\n```\r\n\r\nRequire the module in your source-code:\r\n```javascript\r\nvar core = require('kobold-core');\r\n```\r\n\r\n##Usage\r\n\r\nThe module exposes 2 major components:\r\n* Storage Adapter\r\n* Connection Adapter\r\n\r\n###Storage Adapter\r\n\r\nThere are two storage adapter available:\r\n* FileStorageAdapter (```file```)\r\n* KeyValueStorageAdapter (```KeyValue```)\r\n\r\nThese adapters can be accessed through the ```storageAdapters``` property:\r\n```javascript\r\nvar FileStorageAdapter = core.storageAdapters.file;\r\n```\r\n\r\nA build function is available to create and configure a storage adapter:\r\n```javascript\r\nvar storageAdapter = core.buildStorageAdapter('build1', {\r\n\ttype: '...'\r\n});\r\n```\r\n\r\nAn abstract storage adapter is exposed to implement additional plugins:\r\n```javascript\r\nvar StoragePlugin = core.StorageAdapter.extend({\r\n\t// Implementation\r\n});\r\n``` \r\n\r\n####File Storage Adapter\r\n\r\nThis storage adapter uses the local filesystem to manage screens.\r\n```javascript\r\nvar fileStorageAdapter = core.buildStorageAdapter('build1', {\r\n\ttype: 'File',\r\n\toptions: {\r\n\t\tpath: 'path/to/screens'\r\n\t}\r\n});\r\n```\r\n\r\n####Key-Value Storage Adapter\r\n\r\nThe Key-Value storage adapter manages screens on a key-value storage system.\r\n```javascript\r\nvar keyValueStorageAdapter = core.buildStorageAdapter('build1', {\r\n\ttype: 'KeyValue',\r\n\tconnection: connectionAdapter,\r\n\toptions: {\r\n\t\tcompany: '<company-id>',\r\n\t\tdepartment: '<department-id>',\r\n\t\tproject: '<project-id>',\r\n\t\tjob: '<job-id>'\r\n\t}\r\n});\r\n```\r\n\r\n###Connection Adapter\r\n\r\nCurrently, only one connection adapter is available:\r\n* RiakConnectionAdapter (```Riak```)\r\n\r\nThese adapters can be accessed through the ```connectionAdapters``` property:\r\n```javascript\r\nvar RiakConnectionAdapter = core.connectionAdapters.Riak;\r\n```\r\n\r\nA build function is available to create and configure a connection adapter:\r\n```javascript\r\nvar riakStorageAdapter = core.buildConnectionAdapter({\r\n\ttype: 'Riak',\r\n\toptions: {\r\n\t\thost: 'www.example.org'\r\n\t}\r\n});\r\n```\r\n\r\nAn abstract connection adapter is exposed to implement additional plugins:\r\n```javascript\r\nvar ConnectionPlugin = core.ConnectionAdapter.extend({\r\n\t// Implementation\r\n});\r\n``` \r\n\r\n####Riak Connection Adapter\r\n\r\nThis adapter can be supplied to the Key-Value storage adapter to save the screens in a Riak grid.\r\n```javascript\r\nvar riakStorageAdapter = core.buildConnectionAdapter({\r\n\ttype: 'Riak',\r\n\toptions: {\r\n\t\thost: 'www.example.org'\r\n\t}\r\n});\r\n\r\nvar keyValueStorageAdapter = core.buildStorageAdapter('build1', {\r\n\ttype: 'KeyValue',\r\n\tconnection: riakStorageAdapter,\r\n\toptions: {\r\n\t\tcompany: '<company-id>',\r\n\t\tdepartment: '<department-id>',\r\n\t\tproject: '<project-id>',\r\n\t\tjob: '<job-id>'\r\n\t}\r\n});\r\n```\r\n\r\n##API-Documentation\r\n\r\nGenerate the documentation with following command:\r\n```shell\r\nnpm run docs\r\n```\r\nThe documentation will be generated in the ```docs``` folder of the module root.\r\n\r\n##Tests\r\n\r\nRun the tests with the following command:\r\n```shell\r\nnpm run test\r\n```\r\nThe code-coverage will be written to the ```coverage``` folder in the module root.\r\n\r\n##Third-party libraries\r\n\r\nThe following third-party libraries are used by this module:\r\n\r\n###Dependencies\r\n* pngjs-image: https://github.com/yahoo/pngjs-image\r\n* preceptor-core: https://github.com/yahoo/preceptor-core\r\n* promise: https://github.com/then/promise\r\n* request: https://github.com/mikeal/request\r\n* uuid: https://github.com/shtylman/node-uuid\r\n\r\n###Dev-Dependencies\r\n* chai: http://chaijs.com\r\n* istanbul: https://github.com/gotwarlost/istanbul\r\n* mocha: https://github.com/visionmedia/mocha\r\n* sinon: http://cjohansen.no/sinon/\r\n* yuidocjs: https://github.com/yui/yuidoc\r\n\r\n##License\r\n\r\nThe MIT License\r\n\r\nCopyright 2014 Yahoo Inc.\r\n","google":"UA-56408730-6","note":"Don't delete this file! It's used internally to help with page regeneration."}